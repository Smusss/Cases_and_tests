Class Tree (root)                                #класс Tree с параметром root
Class Node (data, left, right, parent)           #класс Node (верщины/узлы) с параметрами left, right(потомки), parent (родитель), data - значение
                                                 #поиск параметра parent можно реализовать как метод
article_tree = Tree()                            #создаем дерево
sap_list = read_excel('article_list.xls')        #условно наполняем из файла - зависит от формата ИД
for x in sap_list:
    atrical_tree.append(Node(x))

while True:                                      #цикл проверки повторного ввода значения от пользователя (не учитыв. некорректный ввод)
    answer = 1
    article = int(input(print('Введите номер статьи: ')))     #запрос ввода статьи от пользователя
    result, node = None, None                    #result - результат работы (значение большей статьи), node - элемент(вершина) с которой работаем

    for item in article_tree:                    #поиск узла с нужным номером статьи 
        if item.data == article:
            node = item

    if node is not None:                         #если узел найден:
        if node.left is not None:                #проверка наличия левого потомка
            result = node.left                   #если существует - результат = левому потомку
            print(f'Большая статья: {result.data}.')  #вывод значения в вершине-результате
        while result is None:
            if node.right is not None:           #если левый не существует - проверка наличия правого потомка
                result = node.right              #если существует - результат = правому потомку
                print(f'Большая статья: {result.data}.')  #вывод значения в вершине-результате
            elif node.parent is None:            #если левый и правый не существуют - проверка наличия элемента-родителя
                print(f'Большей статьи не существует.') #если родителя нет - элемент является корнем, большей статьи нет
                break                            #выход из цикла проверки
            else:                                #элемент найден, родитель есть, потомков нет
                node = node.parent               #меняем элемент(вершину) с которой работаем на текущего родителя       
    else:
        print('Указанная статья не найдена')     #номер статьи не найден в значениях вершин дерева
        answer = int(input('Для повторного ввода 0, для выхода 1: ')) #предложение повторного ввода / выхода
    if answer == 1:
        break
print(f'END')
